// ==UserScript==
// @name         DVSA Driving Test Booking Automation
// @namespace    http://tampermonkey.net/
// @version      2.6
// @description  Automate the driving test booking process with proper delays, pop-up handling and improved date detection
// @include      https://driver-services.dvsa.gov.uk/*
// @grant        none
// ==/UserScript==


(function () {
    'use strict';

    console.log("Script Loaded and Running");

    const minDelay = 5000; // Minimum delay in milliseconds
    const maxDelay = 10000; // Maximum delay in milliseconds
    const nextWeekDelay = 3000;
    const weeksToSearch = 4; // Number of weeks to search forward (configurable)
    let currentWeekIndex = 0; // Tracks the current week being checked
    let searchDirection = "forward"; // "forward" or "backward"
    let foundSeat = false; // Flag to stop the loop when a seat is found
    let allAvailableDates = []; // Store all available dates
    let isPopupVisible = false; // Track if popup is visible

    function randomIntBetween(min, max) {
        return Math.floor(Math.random() * (max - min + 1)) + min;
    }

    function randomDelay(callback) {
        const delay = 4000;
        setTimeout(callback, delay);
    }

    function showToast(message) {
        const toast = document.createElement('div');
        toast.className = 'toast';
        toast.textContent = message;
        document.body.appendChild(toast);

        setTimeout(() => {
            toast.classList.add('show');
        }, 10);
        setTimeout(() => {
            toast.classList.remove('show');
            setTimeout(() => {
                document.body.removeChild(toast);
            }, 300);
        }, 3000);
    }

    function scrollToElement(element) {
        element.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }

    function checkForPopup() {
        const popup = document.querySelector('.ui-dialog.ui-corner-all.ui-widget.ui-widget-content.ui-front');
        if (popup) {
            console.log("Popup detected. Pausing the script to avoid detection");
            showToast("Popup detected. Please dismiss it manually.");
            isPopupVisible = true;
            return true;
        }
        isPopupVisible = false;
        return false;
    }

    function showAvailableDatesTable(availableDates) {
        // Create a popup container (as in your original code)
        const popup = document.createElement('div');
        popup.style.position = 'fixed';
        popup.style.top = '50%';
        popup.style.left = '50%';
        popup.style.transform = 'translate(-50%, -50%)';
        popup.style.backgroundColor = '#fff';
        popup.style.padding = '20px';
        popup.style.border = '1px solid #ccc';
        popup.style.borderRadius = '8px';
        popup.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.2)';
        popup.style.zIndex = '10000';
        popup.style.fontFamily = 'Arial, sans-serif';

        // Add a title
        const title = document.createElement('h3');
        title.textContent = 'Available Test Dates';
        title.style.marginTop = '0';
        popup.appendChild(title);

        // Create a table
        const table = document.createElement('table');
        table.style.width = '100%';
        table.style.borderCollapse = 'collapse';

        // Add table headers
        const headerRow = document.createElement('tr');
        const headerDay = document.createElement('th');
        headerDay.textContent = 'Day';
        headerDay.style.padding = '8px';
        headerDay.style.borderBottom = '2px solid #007bff';
        headerRow.appendChild(headerDay);

        const headerDate = document.createElement('th');
        headerDate.textContent = 'Date';
        headerDate.style.padding = '8px';
        headerDate.style.borderBottom = '2px solid #007bff';
        headerRow.appendChild(headerDate);

        table.appendChild(headerRow);

        // Add table rows for each available date
        availableDates.forEach(date => {
            const row = document.createElement('tr');
            const cellDay = document.createElement('td');
            cellDay.textContent = date.split(', ')[0]; // Extract day (e.g., "Wednesday")
            cellDay.style.padding = '8px';
            cellDay.style.borderBottom = '1px solid #eee';
            row.appendChild(cellDay);

            const cellDate = document.createElement('td');
            cellDate.textContent = date.split(', ').slice(1).join(', '); // Extract full date (e.g., "25 Feb 2025")
            cellDate.style.padding = '8px';
            cellDate.style.borderBottom = '1px solid #eee';
            row.appendChild(cellDate);

            table.appendChild(row);
        });

        popup.appendChild(table);

        // Add a close button
        const closeButton = document.createElement('button');
        closeButton.textContent = 'Close';
        closeButton.style.marginTop = '10px';
        closeButton.style.padding = '8px 16px';
        closeButton.style.backgroundColor = '#007bff';
        closeButton.style.color = '#fff';
        closeButton.style.border = 'none';
        closeButton.style.borderRadius = '4px';
        closeButton.style.cursor = 'pointer';

        closeButton.addEventListener('click', () => {
            document.body.removeChild(popup);
        });

        popup.appendChild(closeButton);

        // Append the popup to the body
        document.body.appendChild(popup);
    }

   

    function getWeekRange() {
        // Placeholder - replace with actual logic to get the week range
        const today = new Date();
        const startDate = today.toLocaleDateString('en-US', { day: 'numeric', month: 'short', year: 'numeric' });
        return { startDate: startDate }; // e.g., "24 Feb 2025"
    }

      function step5() {
        console.log('Running step 5...');
        const results = document.querySelector('.test-centre-results');

        if (!results) {
            console.log('Searching for test centers...');
            document.querySelector('#test-centres-submit').click();
        } else {
            console.log('Checking number of test centers found...');
            if (results.children.length < nearestNumOfCentres) {
                document.querySelector('#fetch-more-centres').click();
            }

            // Sleep and search again
            const interval = randomIntBetween(30000, 60000);
            console.log('Sleeping for ' + interval / 1000 + 's');
            setTimeout(() => {
                document.location.href = "https://driver-services.dvsa.gov.uk/";
            }, interval);
        }
    }

    function step6() {
        if (isPopupVisible) {
            console.log("Script paused due to popup. Please dismiss the pop-up manually.");
            return;
        }

        console.log(`Running Step 6 - Week ${currentWeekIndex + 1}/${weeksToSearch}, Direction: ${searchDirection}`);

        // Get the week range
        const weekRange = getWeekRange();
        if (!weekRange) {
            console.log("Could not determine the week range");
            return;
        }

        // Extract month and year from the start date
        const [startDay, startMonth, startYear] = weekRange.startDate.split(' ');
        const month = startMonth;
        const year = startYear;

        // Get available dates from the DOM (like the old script)
        const dateCells = document.querySelectorAll('.day.none, .day.nonenonotif');
        let availableDates = [];

        dateCells.forEach(cell => {
            if (cell.classList.contains('slotsavailable')) {
                const dateLink = cell.querySelector('a');
                if (dateLink) {
                    const dateText = dateLink.textContent.trim();
                    if (dateText) {
                        availableDates.push({
                            day: new Date(`${dateText} ${month} ${year}`).toLocaleString('en-US', { weekday: 'long' }),
                            date: dateText
                        });
                    }
                }
            }
        });

        if (availableDates.length > 0) {
            // Seat found! Stop the search and show popup
            foundSeat = true;
            const formattedDates = availableDates.map(({ day, date }) => {
                return `${day}, ${date} ${month} ${year}`;
            });
            console.log("Available dates this week:", formattedDates);
            showAvailableDatesTable(formattedDates);
            showToast("Seat available!");
            return; // Exit the function to stop further execution
        } else {
            console.log("No available dates found in this week");
            showToast("No dates available");
        }

        // Decide the next step based on direction and progress
        if (!foundSeat) {
            if (searchDirection === "forward" && currentWeekIndex < weeksToSearch - 1) {
                // Move to the next week
                currentWeekIndex++;
                step7();
            } else if (searchDirection === "forward" && currentWeekIndex === weeksToSearch - 1) {
                // Reached the end of forward search, switch to backward
                searchDirection = "backward";
                console.log("Switching to backward search");
                goToPreviousWeek();
            } else if (searchDirection === "backward") {
                // Continue backward search indefinitely
                goToPreviousWeek();
            }
        }
    }

    step6();

    function step7() {
        if (isPopupVisible) {
            console.log("Script paused due to popup. Please dismiss the pop-up manually.");
            return;
        }

        console.log('Running Step 7');
        const nextWeekLink = document.querySelector('#searchForWeeklySlotsNextWeek'); // Assuming this is the ID for the "Next Week" button

        if (nextWeekLink && !foundSeat) {
            setTimeout(() => {
                const popup = document.querySelector('.ui-dialog.ui-corner-all.ui-widget.ui-widget-content.ui-front');
                if (popup) {
                    console.log('Popup detected. Pausing the script to avoid detection.');
                    showToast('Popup detected. Please dismiss it manually.');
                    return;
                }

                nextWeekLink.click();
                console.log("Clicked on next week link");
                showToast('Checking availability for next week....');

                // After clicking on next week, wait for the page to load and re-run step 6
                setTimeout(() => {
                    step6(); // Check the available dates for the next week
                }, 5000); // Wait for 5 seconds for the page to load
            }, nextWeekDelay);
        } else {
            console.log("No more weeks to check or reached the limit (or seat found)");
        }
    }

    function goToPreviousWeek() {
        const previousWeekButton = document.querySelector('#searchForWeeklySlotsPreviousWeek');
        if (previousWeekButton) {
            console.log("Going back to previous week");
            previousWeekButton.click();
            setTimeout(step6, 5000); // Wait 5 seconds for the page to update
        } else {
            console.log("Previous week button not found!");
        }
    }

    function handlePage() {
        if (checkForPopup()) {
            console.log("Script paused due to popup. Please dismiss the pop-up manually.");
            return;
        }

        switch (document.title) {
            case "Test date selection":
                startSearch(); // Start the multi-week search
                break;
            default:
                console.log('Unknown page title:', document.title);
                break;
        }
    }

    function startSearch() {
        currentWeekIndex = 0;
        searchDirection = "forward";
        foundSeat = false;
        step6(); // Kick off the search
    }

    (function createToastContainer() {
        const style = document.createElement('style');
        style.innerHTML = `
            .toast {
                visibility: hidden;
                min-width: 250px;
                margin-left: -125px;
                background-color: #333;
                color: #fff;
                text-align: center;
                border-radius: 2px;
                padding: 16px;
                position: fixed;
                z-index: 10000;
                left: 50%;
                bottom: 30px;
                font-size: 17px;
            }

            .toast.show {
                visibility: visible;
                -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
                animation: fadein 0.5s, fadeout 0.5s 2.5s;
            }

            @-webkit-keyframes fadein {
                from {bottom: 0; opacity: 0;}
                to {bottom: 30px; opacity: 1;}
            }

            @keyframes fadein {
                from {bottom: 0; opacity: 0;}
                to {bottom: 30px; opacity: 1;}
            }

            @-webkit-keyframes fadeout {
                from {bottom: 30px; opacity: 1;}
                to {bottom: 0; opacity: 0;}
            }

            @keyframes fadeout {
                from {bottom: 30px; opacity: 1;}
                to {bottom: 0; opacity: 0;}
            }
        `;
        document.head.appendChild(style);
    })();

    // Ensure the script runs after the page is fully loaded
    window.addEventListener('load', () => {
        randomDelay(handlePage);
    });

    setInterval(checkForPopup, 1000); // Check for popup every second
})();
